name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y dpkg xdotool python3-tz

    - name: Extract version from tag
      id: extract_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

    - name: Run build script
      env:
        VERSION: ${{ env.VERSION }}
      run: chmod +x ./build.sh && ./build.sh

    - name: Archive .deb package
      run: mv .build/windwatch_${{ env.VERSION }}.deb ./


    - name: Upload .deb package as artifact
      uses: actions/upload-artifact@v3
      with:
        name: windwatch-deb
        path: windwatch_${{ env.VERSION }}.deb

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Extract version from tag
      id: extract_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

    - name: Download build artifact
      uses: actions/download-artifact@v2
      with:
        name: windwatch-deb
        path: .

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windwatch_${{ env.VERSION }}.deb
        asset_name: windwatch_${{ env.VERSION }}.deb
        asset_content_type: application/octet-stream
